generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id               String        @id @default(uuid())
  email            String        @unique
  password         String
  termsAccepted    Boolean       @default(false)
  isEmailConfirmed Boolean       @default(false)
  tattooArtist     TattooArtist? @relation(fields: [tattooArtistId], references: [id], onDelete: Cascade)
  tattooArtistId   String?       @unique
  profile          Profile?      @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId        String?       @unique
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
}

model Profile {
  id              String   @id @default(uuid())
  name            String
  username        String
  birthDate       String
  imageProfileUrl String?
  user            User?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  tags            Tag[]
}

model Tag {
  id        String    @id @default(uuid())
  name      String
  profiles  Profile[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model TattooArtist {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  address   Address? @relation(fields: [addressId], references: [id], onDelete: Cascade)
  addressId String?  @unique
  user      User?
}

model Address {
  id           String        @id @default(uuid())
  street       String
  number       String
  city         String
  state        String
  country      String        @default("Brazil")
  latitude     Float?
  longitude    Float?
  zipCode      String
  tattooArtist TattooArtist?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}
